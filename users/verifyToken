import jwt from "jsonwebtoken";

const config = process.env;

export const verifyUserToken = (req, res, next) => {
    if (!req.headers.authorization) {
      return res.status(401).send("Unauthorized request");
    }
    const token = req.headers["authorization"].split(" ")[1];
    if (!token) {
      return res.status(401).send("Access denied. No token provided.");
    }
    try {
      const decoded = jwt.verify(token, config.JWT_SECRET);
      req.username = decoded.username;
      req.role = decoded.userRole
      next();
    } catch (err) {
      res.status(400).send("Invalid token.");
    }
  };

  export const verifyAdminToken = (req, res, next) => {
    if (!req.headers.authorization) {
      return res.status(401).send("Unauthorized request");
    }
    const token = req.headers["authorization"].split(" ")[1];
    if (!token) {
      return res.status(401).send("Access denied. No token provided.");
    }
    try {
      const decoded = jwt.verify(token, config.JWT_SECRET);
      if(decoded.userRole){
        req.username = decoded.username;
        req.role = decoded.userRole;
        next();
      }else{
        return res.status(403).send("Not authorized!!");
      }

    } catch (err) {
      res.status(400).send("Invalid token.");
    }
  };
